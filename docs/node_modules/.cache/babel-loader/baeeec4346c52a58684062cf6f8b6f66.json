{"ast":null,"code":"var _jsxFileName = \"/Users/maxwellwesterberg/Desktop/web-ratings/docs/src/pages/Home.js\";\nimport React, { Component } from \"react\";\nimport Module from \"../components/module/Index\";\nimport Filter from \"../components/Filter/Index\";\nimport Container from \"../components/Container/Index\";\nimport { Link } from \"react-router-dom\";\nimport Checkbox from \"../components/Checkbox\";\nimport API from \"../utils/API\";\nimport Cookies from \"js-cookie\"; // import { response } from \"express\";\n// array of filter names//\n\nconst items = ['Popular', 'Highest Rating', 'Newest'];\n\nclass Home extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      websites: [],\n      filteredSites: [],\n      options: \"\",\n      category: \"\"\n    };\n\n    this.componentDidMount = () => {\n      this.loadWebsites();\n      this.selectedBoxes = new Set();\n      this.getUserData();\n    };\n\n    this.handleInputChange = event => {\n      const _event$target = event.target,\n            name = _event$target.name,\n            value = _event$target.value;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.handleFormSubmit = formSubmitEvent => {\n      formSubmitEvent.preventDefault();\n\n      for (const box of this.selectedBoxes) {\n        console.log(box, 'is chosen');\n      }\n    };\n\n    this.loadWebsites = () => {\n      API.getWebsites().then(res => this.setState({\n        websites: res.data,\n        filteredSites: res.data\n      })).catch(err => console.log(err));\n    };\n\n    this.getUserData = () => {\n      alert(Cookies.get('loggedIn'));\n    };\n\n    this.toggleBox = label => {\n      if (this.selectedBoxes.has(label)) {\n        this.selectedBoxes.delete(label);\n      } else {\n        this.selectedBoxes.add(label);\n        this.setState({\n          checkbox: label\n        });\n      }\n    };\n\n    this.createCheckbox = label => React.createElement(Checkbox, {\n      label: label,\n      handleCheck: this.toggleBox,\n      key: label,\n      onChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    });\n\n    this.renderCheckboxes = () => items.map(this.createCheckbox);\n\n    this.applyFilters = () => {\n      let filterArray = [];\n      let hasCategory = false;\n      let hasCheck = false;\n\n      if (this.state.category === \"Search\") {\n        filterArray.push(\"Search\");\n        hasCategory = true;\n      }\n\n      if (this.state.category === \"Sports\") {\n        filterArray.push(\"Sports\");\n        hasCategory = true;\n      }\n\n      if (this.state.category === \"News\") {\n        filterArray.push(\"News\");\n        hasCategory = true;\n      }\n\n      if (this.state.category === \"Social\") {\n        filterArray.push(\"Social\");\n        hasCategory = true;\n      }\n\n      if (this.state.category === \"Travel\") {\n        filterArray.push(\"Travel\");\n        hasCategory = true;\n      }\n\n      if (this.state.category === \"Shopping\") {\n        filterArray.push(\"Shopping\");\n        hasCategory = true;\n      }\n\n      if (this.state.options === \"Highest Rated\") {\n        filterArray.push(\"Highest Rated\");\n        hasCheck = true;\n      }\n\n      if (this.state.options === \"Popular\") {\n        filterArray.push(\"Popular\");\n        hasCheck = true;\n      }\n\n      if (this.state.options === \"New\") {\n        filterArray.push(\"New\");\n        hasCheck = true;\n      }\n\n      if (hasCategory === true && hasCheck === false) {\n        let categoryArray = this.state.websites.filter(website => website.category === filterArray[0]);\n        this.setState({\n          filteredSites: categoryArray\n        });\n      }\n\n      if (hasCategory === false && hasCheck === true) {\n        let sortedArray = [];\n\n        if (filterArray[0] === \"Highest Rated\") {\n          sortedArray = this.state.websites.sort((a, b) => b.rating - a.rating);\n          this.setState({\n            filteredSites: sortedArray\n          });\n        } else if (filterArray[0] === \"Popular\") {\n          sortedArray = this.state.websites.sort((a, b) => b.visits - a.visits);\n          this.setState({\n            filteredSites: sortedArray\n          });\n        } else if (filterArray[0] === \"New\") {\n          console.log(\"yes\");\n          sortedArray = this.state.websites.sort((a, b) => {\n            let dateA = new Date(a.date);\n            let dateB = new Date(b.date);\n            return dateB - dateA;\n          });\n          this.setState({\n            filteredSites: sortedArray\n          });\n        }\n      }\n\n      if (hasCategory === true && hasCheck === true) {\n        let sortedArray = [];\n        let categoryArray = this.state.websites.filter(website => website.category === filterArray[0]);\n\n        if (filterArray[1] === \"Highest Rated\") {\n          sortedArray = categoryArray.sort((a, b) => b.rating - a.rating);\n          this.setState({\n            filteredSites: sortedArray\n          });\n        } else if (filterArray[1] === \"Popular\") {\n          sortedArray = categoryArray.sort((a, b) => b.visits - a.visits);\n          this.setState({\n            filteredSites: sortedArray\n          });\n        } else if (filterArray[1] === \"New\") {\n          sortedArray = categoryArray.sort((a, b) => {\n            let dateA = new Date(a.date);\n            let dateB = new Date(b.date);\n            return dateB - dateA;\n          });\n          this.setState({\n            filteredSites: sortedArray\n          });\n        }\n      }\n    };\n\n    this.removeFilter = () => {\n      window.location.reload();\n    };\n\n    this.recordVisit = website => {\n      let visitCount = website.website.visits + 1;\n      API.updateWebsite(website.website._id, {\n        visits: visitCount\n      }).then(res => console.log(res.data)).catch(err => console.log(err));\n      window.location.reload();\n    };\n  }\n\n  render() {\n    return React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    }, React.createElement(Filter, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"filter-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }, \"Options:\"), React.createElement(\"select\", {\n      id: \"options\",\n      name: \"options\",\n      className: \"filter-item\",\n      onChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"\",\n      disabled: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }, \"Categories\"), React.createElement(\"option\", {\n      defaultValue: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }), React.createElement(\"option\", {\n      value: \"Highest Rated\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }, \"Highest Rated\"), React.createElement(\"option\", {\n      value: \"Popular\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }, \"Popular\"), React.createElement(\"option\", {\n      value: \"New\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }, \"New\")), React.createElement(\"label\", {\n      className: \"filter-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    }, \"Category:\"), React.createElement(\"select\", {\n      id: \"category\",\n      name: \"category\",\n      className: \"filter-item\",\n      onChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"\",\n      disabled: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211\n      },\n      __self: this\n    }, \"Categories\"), React.createElement(\"option\", {\n      defaultValue: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212\n      },\n      __self: this\n    }), React.createElement(\"option\", {\n      value: \"News\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213\n      },\n      __self: this\n    }, \"News\"), React.createElement(\"option\", {\n      value: \"Sports\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214\n      },\n      __self: this\n    }, \"Sports\"), React.createElement(\"option\", {\n      value: \"Social\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215\n      },\n      __self: this\n    }, \"Social\"), React.createElement(\"option\", {\n      value: \"Shopping\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216\n      },\n      __self: this\n    }, \"Shopping\"), React.createElement(\"option\", {\n      value: \"Travel\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217\n      },\n      __self: this\n    }, \"Travel\"), React.createElement(\"option\", {\n      value: \"Search\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218\n      },\n      __self: this\n    }, \"Search\")), React.createElement(\"button\", {\n      className: \"pure-button pure-button-primary filter-item\",\n      onClick: this.applyFilters,\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220\n      },\n      __self: this\n    }, \"Apply\"), React.createElement(\"button\", {\n      className: \"pure-button pure-button-primary filter-item\",\n      onClick: this.removeFilter,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221\n      },\n      __self: this\n    }, \"Reset Filters\")), React.createElement(Module, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      className: \"webInfo-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225\n      },\n      __self: this\n    }, \"List of Websites\"), React.createElement(\"table\", {\n      className: \"pure-table pure-table-horizontal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229\n      },\n      __self: this\n    }, \"Website  Names\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230\n      },\n      __self: this\n    }, \"Websites Details\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231\n      },\n      __self: this\n    }, \"Website Rating\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232\n      },\n      __self: this\n    }, \"Average Daily Visits\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233\n      },\n      __self: this\n    }, \"Website Category\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234\n      },\n      __self: this\n    }, \"Website Link\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237\n      },\n      __self: this\n    }, this.state.filteredSites.map(website => React.createElement(\"tr\", {\n      key: website._id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240\n      },\n      __self: this\n    }, website.title), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/websites/\" + website._id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241\n      },\n      __self: this\n    }, \"click here\")), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242\n      },\n      __self: this\n    }, website.rating), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243\n      },\n      __self: this\n    }, website.visits), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244\n      },\n      __self: this\n    }, website.category), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: website.URL,\n      target: \"blank\",\n      onClick: () => {\n        this.recordVisit({\n          website\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246\n      },\n      __self: this\n    }, website.URL))))))));\n  }\n\n}\n\nexport default Home;","map":{"version":3,"sources":["/Users/maxwellwesterberg/Desktop/web-ratings/docs/src/pages/Home.js"],"names":["React","Component","Module","Filter","Container","Link","Checkbox","API","Cookies","items","Home","state","websites","filteredSites","options","category","componentDidMount","loadWebsites","selectedBoxes","Set","getUserData","handleInputChange","event","target","name","value","setState","handleFormSubmit","formSubmitEvent","preventDefault","box","console","log","getWebsites","then","res","data","catch","err","alert","get","toggleBox","label","has","delete","add","checkbox","createCheckbox","renderCheckboxes","map","applyFilters","filterArray","hasCategory","hasCheck","push","categoryArray","filter","website","sortedArray","sort","a","b","rating","visits","dateA","Date","date","dateB","removeFilter","window","location","reload","recordVisit","visitCount","updateWebsite","_id","render","title","URL"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Module from \"../components/module/Index\"\nimport Filter from \"../components/Filter/Index\"\nimport Container from \"../components/Container/Index\";\nimport { Link } from \"react-router-dom\";\nimport Checkbox from \"../components/Checkbox\"\nimport API from \"../utils/API\";\nimport Cookies from \"js-cookie\";\n// import { response } from \"express\";\n\n// array of filter names//\nconst items = [\n    'Popular',\n    'Highest Rating',\n    'Newest'\n];\n\nclass Home extends Component {\n    state = {\n        websites: [],\n        filteredSites: [],\n        options: \"\",\n        category: \"\",\n    };\n\n    \n    \n    componentDidMount = () => {\n        this.loadWebsites();\n        this.selectedBoxes = new Set();\n        this.getUserData()\n    }\n\n    handleInputChange = event => {\n        const { name, value } = event.target;\n        this.setState({\n            [name]: value\n        })\n    };\n\n    handleFormSubmit = formSubmitEvent => {\n        formSubmitEvent.preventDefault();\n        for (const box of this.selectedBoxes) {\n            console.log(box, 'is chosen');\n        }\n    }\n\n    //retrieve website data from API\n    loadWebsites = () => {\n        API.getWebsites()\n        .then(res =>\n            this.setState({ websites: res.data, filteredSites: res.data })\n        )\n        .catch(err => console.log(err));\n        \n    };\n    //retrieve username from cookies\n    getUserData = () => {\n        alert(Cookies.get('loggedIn'))\n    }\n\n    //for checking and unchecking boxes \n    toggleBox = label => {\n        if (this.selectedBoxes.has(label)) {\n            this.selectedBoxes.delete(label);\n        } else {\n            this.selectedBoxes.add(label);\n            this.setState({ checkbox: label })\n        }\n    }\n    \n    // uses list array to create checkboxes\n    createCheckbox = label => (\n        <Checkbox\n            label={label}\n            handleCheck={this.toggleBox}\n            key={label}\n            onChange={this.handleInputChange}\n            />\n    )\n\n    renderCheckboxes = () => (\n        items.map(this.createCheckbox)\n    )\n    \n    //functionality for applying filters\n    applyFilters = () => {\n        let filterArray = []\n        let hasCategory = false\n        let hasCheck = false\n        \n        if (this.state.category === \"Search\") {\n            filterArray.push(\"Search\")\n            hasCategory = true\n        }\n        if (this.state.category === \"Sports\") {\n            filterArray.push(\"Sports\")\n            hasCategory = true\n        }\n        if (this.state.category === \"News\") {\n            filterArray.push(\"News\")\n            hasCategory = true\n        }\n        if (this.state.category === \"Social\") {\n            filterArray.push(\"Social\")\n            hasCategory = true\n        }\n        if (this.state.category === \"Travel\") {\n            filterArray.push(\"Travel\")\n            hasCategory = true\n        }\n        if (this.state.category === \"Shopping\") {\n            filterArray.push(\"Shopping\")\n            hasCategory = true\n        }\n        if (this.state.options === \"Highest Rated\") {\n            filterArray.push(\"Highest Rated\")\n            hasCheck = true \n        }\n        if (this.state.options === \"Popular\") {\n            filterArray.push(\"Popular\")\n            hasCheck = true\n        }\n        if (this.state.options === \"New\") {\n            filterArray.push(\"New\")\n            hasCheck = true\n        }\n        if (hasCategory === true && hasCheck === false) {\n            let categoryArray = this.state.websites.filter(website => website.category === filterArray[0])\n            this.setState({ filteredSites: categoryArray})\n        }\n        if (hasCategory === false && hasCheck === true) {\n            let sortedArray = []\n            if (filterArray[0] === \"Highest Rated\") {\n                sortedArray = this.state.websites.sort((a,b) => (b.rating - a.rating))\n                this.setState({ filteredSites: sortedArray})\n            }\n            else if (filterArray[0] === \"Popular\") {\n                sortedArray = this.state.websites.sort((a,b) => (b.visits - a.visits))\n                this.setState({ filteredSites: sortedArray})\n            }\n            else if (filterArray[0] === \"New\") {\n                console.log(\"yes\")\n                sortedArray = this.state.websites.sort((a,b) => \n                {\n                    let dateA = new Date(a.date);\n                    let dateB = new Date(b.date);\n                    return dateB - dateA; \n                    \n                })\n                this.setState({ filteredSites: sortedArray})\n            }\n        }\n        if (hasCategory === true && hasCheck === true) {\n            let sortedArray = []\n            let categoryArray = this.state.websites.filter(website => website.category === filterArray[0])\n            if (filterArray[1] === \"Highest Rated\") {\n                sortedArray = categoryArray.sort((a,b) => (b.rating - a.rating))\n                this.setState({ filteredSites: sortedArray})\n            }\n            else if (filterArray[1] === \"Popular\") {\n                sortedArray = categoryArray.sort((a,b) => (b.visits - a.visits))\n                this.setState({ filteredSites: sortedArray})\n            }\n            else if (filterArray[1] === \"New\") {\n                sortedArray = categoryArray.sort((a, b) => {\n                    let dateA = new Date(a.date);\n                    let dateB = new Date(b.date);\n                    return dateB - dateA; \n\n                })\n                this.setState({ filteredSites: sortedArray})\n            }\n            \n        }\n    }\n    \n    removeFilter = () => {\n        window.location.reload();\n    }\n\n    recordVisit = (website) => {\n        let visitCount = website.website.visits + 1 \n        API.updateWebsite(website.website._id, {visits: visitCount})\n        .then( res => console.log(res.data)\n        )\n        .catch(err => console.log(err));\n        window.location.reload();\n    }\n\n    render() {\n        return (\n            <Container>\n                <Filter>\n                    <label className=\"filter-item\">Options:</label>\n                    <select id=\"options\" name=\"options\" className=\"filter-item\"\n                    onChange={this.handleInputChange}>\n                        <option value=\"\" disabled>Categories</option>\n                        <option defaultValue=\"\" ></option>\n                        <option value=\"Highest Rated\">Highest Rated</option>\n                        <option value=\"Popular\">Popular</option>\n                        <option value=\"New\">New</option>\n                        \n                    </select>\n                    {/* <form onSubmit={this.handleFormSubmit}>\n                        {this.renderCheckboxes()}\n                    </form> */}\n                    <label className=\"filter-item\">Category:</label>\n                    <select id=\"category\" name=\"category\" className=\"filter-item\"\n                    onChange={this.handleInputChange}>\n                        <option value=\"\" disabled>Categories</option>\n                        <option defaultValue=\"\" ></option>\n                        <option value=\"News\" >News</option>\n                        <option value=\"Sports\">Sports</option>\n                        <option value=\"Social\">Social</option>\n                        <option value=\"Shopping\">Shopping</option>\n                        <option value=\"Travel\">Travel</option>\n                        <option value=\"Search\">Search</option>\n                    </select>\n                    <button className=\"pure-button pure-button-primary filter-item\" onClick={this.applyFilters} type=\"submit\">Apply</button>\n                    <button className=\"pure-button pure-button-primary filter-item\" onClick={this.removeFilter}>Reset Filters</button>\n\n                </Filter>\n                <Module>\n                    <h3 className=\"webInfo-title\">List of Websites</h3>\n                    <table className=\"pure-table pure-table-horizontal\">\n                        <thead>\n                            <tr>\n                                <th>Website  Names</th>\n                                <th>Websites Details</th>\n                                <th>Website Rating</th>\n                                <th>Average Daily Visits</th>\n                                <th>Website Category</th>\n                                <th>Website Link</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {this.state.filteredSites.map(website => (\n                                <tr key={website._id}>\n                                <td>{website.title}</td>\n                                <td><Link to={\"/websites/\" + website._id}>click here</Link></td>\n                                <td>{website.rating}</td>\n                                <td>{website.visits}</td>\n                                <td>{website.category}</td>\n                                <td>\n                                    <a \n                                        href={website.URL} \n                                        target=\"blank\" \n                                        onClick={() => {this.recordVisit({website})}}\n                                    >\n                                        {website.URL}\n                                    </a>\n                                </td>\n                                </tr>\n                            ))}\n                        </tbody>\n                    </table>\n                </Module>\n            </Container>\n        );\n    }\n}\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}